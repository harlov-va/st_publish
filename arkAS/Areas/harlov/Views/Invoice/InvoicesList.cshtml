@model arkAS.Areas.harlov.Models.InvoiceViewModel
@{
    ViewBag.Title = "Список Счетов";
    Layout = "~/Areas/harlov/Views/Shared/_CabinetLayout.cshtml";
    var js = new System.Web.Script.Serialization.JavaScriptSerializer();
}

<div class='invCont'>

</div>
@section js{
    <script type="text/javascript">
        var contragentSource = @Html.Raw(js.Serialize((Model.Contragents).Select(x => new { Value = x.id, Text = x.name, Selected = false})));
        var statusesSource =  @Html.Raw(js.Serialize((Model.InvStatuses).Select(x => new { Value = x.id, Text = x.name, Selected = false})));
        var statusesSourceForInline =  @Html.Raw(js.Serialize((Model.InvStatuses).Select(x => new { value = x.id, text = x.name, Selected = false})));

        var asApp = {
            init: function () {
                asApp.initMainTable();
            },

            initMainTable: function () {
                as.crud.init({
                    cont: $('.invCont'),
                    title: 'Список счетов',
                    toolbarAdditional: '',
                    groupOperationsToolbar: '',
                    ajaxURLFormat: '/harlov/Invoice/InvoicesList_{0}',
                    inlineAjaxURL: "/harlov/Invoice/ChangeInvStatus",
                    pageSize: 5,
                    cookiePrefix: 'as-crud-h-invoices',
                    emptyText: 'Нет элементов',
                    createLinkTitle: 'Создать',
                    filterLinkTitle: 'Найти',
                    filterTitle: 'Фильтрация данных',
                    showChecksCol: false,
                    showNumsCol: true,
                    showToolbar: true,
                    showColSettings: false,
                    showReplaceTool: false,
                    showExcelExport: false,
                    additionalSort: false,
                    cols: [
                        { code: "id", title: "ID", tooltip: "Идентификатор", isVisible: false, isPK: true, datatype: "int", isRequired: false, editHide: true },
                         { code: "uniqueCode", title: "uniqueCode", tooltip: "Уникальный идентификатор", isVisible: false, isPK: false, datatype: "int", isRequired: false, editHide: true },
                        { code: "date", title: "Дата", tooltip: "Дата", isVisible: true, isPK: false, datatype: "date", isRequired: true, format: "{0}", isSort: true, callback: null },
                        { code: "number", title: "Номер", tooltip: "Номер", isVisible: true, isPK: false, datatype: "string", isRequired: true, format: "{0}", isSort: true, callback: null },
                        { code: "description", title: "Описание", tooltip: "Описание", isVisible: true, isPK: false, datatype: "string", isRequired: true, format: "{0}", isSort: false, callback: null },
                        { code: "isDeleted", title: "isDeleted", tooltip: "isDeleted", isVisible: false, isPK: false, datatype: "string", isRequired: false, format: "{0}", isSort: false, editHide: true,  callback: null },
                        { code: "contragentName", title: "Контрагент", tooltip: "Контрагент", isVisible: true, isPK: false, datatype: "select", isRequired: true, format: "{0}", isSort: false, editSources: contragentSource, editHide: false, callback: null },
                        {code: "invoiceStatus", title: "Статус", tooltip: "Статус", isVisible: true, isPK: false, datatype: "select", isRequired: false, format: "{0}", isSort: false,  editSources: statusesSource,  editHide: false, editable: { type: "select", format: "{0}", source: statusesSourceForInline, callback: function (el, newValue) { } } }
                    ],
                    operations: {
                        create: true,
                        remove: true,
                        edit: true,
                        other: [
                        ]
                    },
                    getFilterMakeup: function (filter) {
                        var s = "";
                        s += "<div class='form-group'><input type='text' placeholder='Поиск по номеру' class='usText form-control' value='" + (filter.text || '') + "' /></div>";
                        return s;
                    },
                    filter: function () {

                        var filter = {
                            text: $('.usText').val() || ""
                        };
                        return filter;
                    }

                });
            }
        }
        $(function () {
            asApp.init();
        });
    </script>
}
