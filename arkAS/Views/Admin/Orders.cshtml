@using arkAS.BLL

@{
    ViewBag.Title = "Заказы";
    Layout = arkAS.BLL.Core.CoreManager.GetCabinetLayout();
    var js = new System.Web.Script.Serialization.JavaScriptSerializer();
}


<select class='usChecOrderStatus hide'>
    <option value="0">Не выбрано</option>
    @foreach (var item in ViewBag.OrderStatuses)
    {
        <option value='@item.id'> @item.name </option>
    }
</select>

<select class='usCheckClient hide'>
    <option value="0">Не выбрано</option>
    @foreach (var item in ViewBag.Clients)
    {
        <option value='@item.id'> @item.fio </option>
    }
</select>
<div class="usCont">

</div>

@section js
    {
    <script type="text/javascript">
    var sourceOrderStatuses = @Html.Raw(js.Serialize(((List<crm_orderStatuses>)ViewBag.OrderStatuses).Select(x => new { Value = x.id, Text = x.name, Selected = false })));
    var sourceOrderStatusesEditable = @Html.Raw(js.Serialize(((List<crm_orderStatuses>)ViewBag.OrderStatuses).Select(x => new { value = x.id, text = x.name })));

    var sourceClients = @Html.Raw(js.Serialize(((List<crm_clients>)ViewBag.Clients).Select(x => new { Value = x.id, Text = x.fio, Selected = false })));
    var sourceClientsEditable = @Html.Raw(js.Serialize(((List<crm_clients>)ViewBag.Clients).Select(x => new { value = x.id, text = x.fio })));


         var asdemo = {
             init: function () {
                 asdemo.initMainTable();
                 $(document).delegate('.usCreateDoc', 'click', function (e) {
                     e.preventDefault();
                     asdemo.createItem();
                 });
             },
             initMainTable: function () {
                 as.crud.init({
                     cont: $('.usCont'),
                     title: 'Заказы',
                     toolbarAdditional: '<a href="#" class="btn btn-primary usCreateDoc">Создать</a>',
                     groupOperationsToolbar: '',
                     ajaxURLFormat: '/Admin/Orders_{0}',
                     inlineAjaxURL: "/Admin/OrdersInline",
                     pageSize: 150,
                     cookiePrefix: "as-crud-OrdersDict-",
                     emptyText: 'Нет элементов',
                     createLinkTitle: 'Создать',
                     filterLinkTitle: 'Найти',
                     filterTitle: 'Фильтрация данных',
                     showChecksCol: false,
                     showNumsCol: true,
                     showToolbar: true,
                     showColSettings: false,
                     showReplaceTool: false,
                     showExcelExport: false,
                     additionalSort: false,
                     cols: [
                    { code: "id", title: "ID", tooltip: "Идентификатор", isVisible: false, isPK: true, datatype: "int", isRequired: false, editHide: true },
                    { code: "created", filter: { type: "daterange" }, title: "Дата создания", editHide: true, tooltip: "Дата создания", isVisible: true, isPK: false, datatype: "date", isRequired: false, format: "{0}", isSort: true, callback: null },
                    {
                        code: "addedBy", title: "Разместил заказ", tooltip: "Разместил заказ", isVisible: true, isPK: false, datatype: "string", isRequired: true, format: "{0}", isSort: true, callback: null   
                    },
                    {
                        code: "orderNum", title: "Номер заказа", tooltip: "Номер заказа", isVisible: true, isPK: false, datatype: "string", isRequired: true, format: "{0}", isSort: true, callback: null,
                        editable: { type: "text", format: "{0}", callback: function (el, newValue) { } }
                    },
                    {
                        code: "statusName", title: "Статус", tooltip: "Статус", isVisible: true, isPK: false, datatype: "select", isRequired: false, format: "{0}", isSort: true, editSources: sourceOrderStatuses, callback: null,
                        editable: { type: "select", format: "{0}", source: sourceOrderStatusesEditable, notSelected: "Не установлено", callback: function (el, newValue) { } },
                    },
                    {
                        code: "clientName", title: "Клиент", tooltip: "Клиент", isVisible: true, isPK: false, datatype: "select", isRequired: false, format: "{0}", isSort: true, editSources: sourceClients , callback: null,
                        editable: { type: "select", format: "{0}", source: sourceClientsEditable, notSelected: "Не установлено", callback: function (el, newValue) { } },
                    },
                     ],
                     operations: {
                         create: false,
                         remove: true,
                         edit: false,
                         other:[]
                     },
                     getFilterMakeup: function (filter) {
                         var s = [];
                         s.push("<div class='crdFilterItem'><span class='gCap'>Разместил заказ</span><input type='text' class='usName' value='" + (filter.addedBy || '') + "' /></div>");

                         $('.usChecOrderStatus option').removeAttr('selected');
                         $('.usChecOrderStatus option[value=' + filter.statusID + ']').attr('selected', 'selected');
                         s.push("<div class='crdFilterItem'><span class='gCap'>Статус</span><select class='usOrderStatus'>" + $('.usChecOrderStatus').html() + "</select></div>");

                         $('.usCheckClient option').removeAttr('selected');
                         $('.usCheckClient option[value=' + filter.clientID + ']').attr('selected', 'selected');
                         s.push("<div class='crdFilterItem'><span class='gCap'>Клиент</span><select class='usparametersClient'>" + $('.usCheckClient').html() + "</select></div>");

                         return s.join("");
                     },
                     filter: function () {
                         var filter = {
                             addedBy: $('.usName').val() || "",
                             statusID: $('.usOrderStatus option:selected').val(),
                             clientID: $('.usparametersClient option:selected').val()
                         };
                         return filter;
                     },
                 });
             },
             createItem: function () {
                 var s = [];
                 s.push("<span>Номер заказа</span><input type='text' class='form-control usNewNumber' /><br />");

                 $('.usCheckOrderStatuses option').removeAttr('selected');
                 $('.usCheckOrderStatuses option:first').attr('selected', 'selected');
                 s.push("<span>Статус</span><select class='form-control usNewStatusID' >"+ $('.usChecOrderStatus').html() + "</select><br />");

                 $('.usCheckClient option').removeAttr('selected');
                 $('.usCheckClient option:first').attr('selected', 'selected');
                 s.push("<span>Клиент</span><select class='form-control usNewClientID' >"+ $('.usCheckClient').html() + "</select><br />");

                 setTimeout(function () { $('.usNewName').focus(); }, 200);
                 as.sys.showDialog("Создание", s.join(""), "Сохранить", function () {
                     var orderNum = $('.usNewNumber').val();
                     var statusID = $('.usNewStatusID option:selected').val();
                     var clientID = $('.usNewClientID option:selected').val();
                     if (!orderNum) {
                         as.sys.bootstrapAlert("Укажите пожалуйста номер", { type: 'warning' });
                         $('.usNewNumber').focus();
                         return;
                     }
                     if (!statusID || statusID == 0) {
                         as.sys.bootstrapAlert("Укажите пожалуйста статус", { type: 'warning' });
                         $('.usNewStatusID').focus();
                         return;
                     }
                     if (!clientID || clientID == 0) {
                         as.sys.bootstrapAlert("Укажите пожалуйста клиента", { type: 'warning' });
                         $('.usNewClientID').focus();
                         return;
                     }
                     var params = {
                         orderNum: orderNum,
                         statusID: statusID,
                         clientID: clientID
                     };
                     as.sys.ajaxSend("/Admin/CreateOrder", params, function (data) {
                         if (typeof (data) != "object") data = eval('(' + data + ')');
                         if (data.result) {
                             as.sys.bootstrapAlert("Элемент сохранен", { type: 'success' });
                             as.sys.closeDialog();
                             as.crud.getItems();
                             setTimeout(function () {
                                 as.crud.gotoItem(data.textID);
                             }, 1000);
                         } else {
                             as.sys.bootstrapAlert(data.msg || "Возникли ошибки при выполнении операции!", { type: 'danger' });
                         }
                     });
                 });
             },
         }
         $(function () {
             asdemo.init();
         });
    </script>

}

