@using arkAS.Models;
@{
    Layout = arkAS.BLL.Core.CoreManager.GetCabinetLayout();
    ViewBag.Title = "Мнения";
    var js = new System.Web.Script.Serialization.JavaScriptSerializer();
}


<div class='usCont'>
</div>
@section js{
<script type="text/javascript">

    var sourceLikeEditTypes = [{ value: 'true', text: as.resources.opinion_Like }, { value: 'false', text: as.resources.opinion_Dislike }];
    var sourceLikeFilterTypes = [ {Value: 'true', Text: as.resources.opinion_Like, Selected: false }, { Value: 'false', Text: as.resources.opinion_Dislike, Selected: false }];
    var sourceUsers = @Html.Raw(js.Serialize(((List<MembershipUser>)Membership.GetAllUsers().Cast<MembershipUser>().AsQueryable().ToList()).Select(x => new { Value = x.UserName, Text = x.UserName, Selected = false })));

    var us = {
        init: function() {
            us.initMainTable();
            $(document).delegate('.usCloseText', 'click', function(e) {
                e.preventDefault();
                $(this).closest("tr").hide(250, function () { $(this).remove(); });
            });
            $(document).delegate('.usSaveText', 'click', function(e) {
                e.preventDefault();
                us.saveText($(this));
            });
        },
        initMainTable: function() {
            as.crud.init({
                cont: $('.usCont'),
                title: 'Мнения',
                //toolbarAdditional: '<a href="#" class="btn btn-primary usCreateText">Создать текст</a>&nbsp;&nbsp;',
                groupOperationsToolbar: '',
                ajaxURLFormat: '/Admin/Opinions_{0}',
                inlineAjaxURL: "/Admin/OpinionsInline",
                pageSize: 10,
                cookiePrefix: "as-crud-opinionsTable-",
                emptyText: 'Нет элементов',
                createLinkTitle: 'Создать',
                filterLinkTitle: 'Найти',
                filterTitle: 'Фильтрация данных',
                showChecksCol: false,
                showNumsCol: true,
                showToolbar: false,
                showColSettings: false,
                showReplaceTool: false,
                showExcelExport: false,
                showPDFExport: false,
                additionalSort: false,
                cols: [
                    { code: "id", title: "ID", tooltip: "Идентификатор", isVisible: false, isPK: true, datatype: "int", isRequired: false },
                    {
                        code: "username",
                        title: "Пользователь",
                        tooltip: "Пользователь",
                        isVisible: true,
                        isPK: false,
                        datatype: "string",
                        isRequired: false,
                        format: "{0}",
                        isSort: true,
                        callback: null,
                        filter: { type: "select", source: sourceUsers, notSelected: "Не выбрано" },
                        editable: false
                    },
                    {
                        code: "created",
                        title: "Дата",
                        tooltip: "Дата",
                        isVisible: true,
                        isPK: false,
                        datatype: "string",
                        isRequired: false,
                        format: "{0}",
                        isSort: true,
                        callback: null,
                        filter: { type: "daterange" },
                        editable: false
                    },
                    {
                        code: "like",
                        title: "Мнение",
                        tooltip: "Мнение",
                        isVisible: true,
                        isPK: false,
                        datatype: "bool",
                        isRequired: false,
                        format: "{0}",
                        isSort: true,
                        callback: null,
                        filter: { type: "select", source: sourceLikeFilterTypes, notSelected: "Не выбрано" },
                        editable: { type: "select", format: "{0}", source: sourceLikeEditTypes, callback: function (el, newValue) { } }
                    },
                    {
                        code: "comment",
                        title: "Примечание",
                        tooltip: "Примечание",
                        isVisible: true,
                        isPK: false,
                        datatype: "string",
                        isRequired: false,
                        format: "{0}",
                        isSort: false,
                        callback: null,
                        editable: false
                    },
                    {
                        code: "type",
                        title: "Тип",
                        tooltip: "Тип",
                        isVisible: true,
                        isPK: false,
                        datatype: "string",
                        isRequired: false,
                        format: "{0}",
                        isSort: true,
                        callback: null,
                        editable: false

                    },
                    {
                        code: "itemID",
                        title: "Ид элемента",
                        tooltip: "Тип",
                        isVisible: true,
                        isPK: false,
                        datatype: "int",
                        isRequired: false,
                        format: "{0}",
                        isSort: true,
                        callback: null,
                        editable: false
                    }
                ],
                operations: {
                    create: false,
                    remove: true,
                    edit: false,
                    other: [
                        { linkClass: 'crdTo2', iconClass: 'glyphicon glyphicon-pencil', title: 'Редактировать текст', callback: us.editValue }
                    ]
                },
                getFilterMakeup: function(filter) {
                    var s = [];
                    //s.push("<div class='crdFilterItem'><span class='as-cap'>Мнение</span><input type='text' class='usText' value='" + (filter.like || '') + "' /></div>");
                    s.push("<div class='crdFilterItem'><span class='as-cap'>Примечание</span><input type='text' class='usComment' value='" + (filter.comment || '') + "' /></div>");

                    return s.join("");
                },
                getItemsCallback: function(){
                    $('td.crdItem[data-code="like"]').each(function(){
                        var link = $(this).children('a');
                        if(link.length > 0){
                            if(link.text() == "true"){
                                link.text(as.resources.opinion_Like); 
                            }
                            else{
                                link.text(as.resources.opinion_Dislike); 
                            }
                        }
                        else{
                            if($(this).html() == "true"){
                                $(this).html(as.resources.opinion_Like); 
                            }
                            else{
                                $(this).html(as.resources.opinion_Dislike); 
                            }
                        }
                    });
                },

                filter: function() {

                    var filter = {
                        comment: $('.usComment').val() || ""
                    };
                    return filter;
                }
            });
        },
        editValue: function(e) {
            e.preventDefault();
            var btn = $(this);
            var tr = btn.closest('tr');
            if (tr.next().hasClass('crdAddRow')) {
                tr.next().hide(50, function() { $(this).remove(); });
            } else {
                var rowId = tr.find("td[data-code=id]").text();

                var s = [];
                s.push("<tr class='crdAddRow'><td colspan='5'>");
                s.push("<div class='well well-sm'><a href='#' class='btn btn-success usSaveText'>Сохранить</a>&nbsp;&nbsp;<a href='#' class='btn btn-default usCloseText'>Закрыть</a></div>");
                //s.push('<p><label class="radio-inline"><input name="opinion-' + rowId + '" type="radio" value="true">' + as.resources.opinion_Like + '</label>');
                //s.push('<label class="radio-inline"><input name="opinion-' + rowId + '" type="radio" value="false">' + as.resources.opinion_Dislike + '</label></p>');
                s.push("<textarea class='usText' rows='15' cols='120' style='max-width:  1600px;'></textarea>");
                s.push("</td></tr>");
                $(s.join("")).insertAfter(tr);
                var params = { id: rowId };
                as.sys.ajaxSend("/Admin/GetOpinion", params, function(data) {
                    if (typeof (data) != "object") data = eval('(' + data + ')');
                    if (data.result) {

                        if(data.like){
                            tr.next().find('input[value="true"]').prop( "checked", true );
                        }
                        else{
                            tr.next().find('input[value="false"]').prop( "checked", true );
                        }

                        var t = tr.next().find('.usText');
                        t.val(data.comment);


                    } else {
                        as.sys.bootstrapAlert(data.msg || "Возникли ошибки при выполнении операции!", { type: 'danger' });
                    }
                });
            }
        },
        saveText: function(btn) {
            var tr = btn.closest("tr").prev();
            var t = btn.closest("tr").find('.usText');
            //var mce = tinyMCE.get(t.attr('id'));
            var comment = t.val();
            //var like = btn.closest("tr").find('input:checked').val();
            var params = { pk: tr.attr('data-itemID'), name: 'comment', value: comment};
            as.sys.ajaxSend("/Admin/OpinionsInline", params, function (data) {
                if (typeof (data) != "object") data = eval('(' + data + ')');
                if (data.result) {
                    tr.find("td[data-code=comment]").html(params.value);
                    as.sys.bootstrapAlert("Сохранено", { type: 'success' });
                } else {
                    as.sys.bootstrapAlert(data.msg || "Возникли ошибки при выполнении операции!", { type: 'danger' });
                }
            });
        }
    };

    $(function () {
        us.init();
    });
</script>
}
