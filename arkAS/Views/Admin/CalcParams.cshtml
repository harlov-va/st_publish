@using arkAS.BLL

@{
    ViewBag.Title = "Параметры калькулаций";
    Layout = arkAS.BLL.Core.CoreManager.GetCabinetLayout();
    var js = new System.Web.Script.Serialization.JavaScriptSerializer();
}

<select class='usCalcCalcsTemplate hide'>
    <option value="0">Не выбрано</option>
    @foreach (var item in ViewBag.CalcCalcs)
    {
        <option value='@item.id'> @item.name </option>
    }
</select>

<select class='usCalcDataTypesTemplate hide'>
    <option value="0">Не выбрано</option>
    @foreach (var item in ViewBag.CalcDataTypes)
    {
        <option value='@item.id'> @item.name </option>
    }
</select>

<div class="usCont">
</div>


@section js{
    <script type="text/javascript">

        var sourceCalcCalcs = @Html.Raw(js.Serialize(((List<calc_calcs>)ViewBag.CalcCalcs).Select(x => new { Value = x.id, Text = x.name, Selected = false })));
        var sourceCalcCalcsEditable = @Html.Raw(js.Serialize(((List<calc_calcs>)ViewBag.CalcCalcs).Select(x => new { value = x.id, text = x.name })));

        var sourceDataTypes = @Html.Raw(js.Serialize(((List<as_dataTypes>)ViewBag.CalcDataTypes).Select(x => new { Value = x.id, Text = x.name, Selected = false })));
        var sourceDataTypesEditable = @Html.Raw(js.Serialize(((List<as_dataTypes>)ViewBag.CalcDataTypes).Select(x => new { value = x.id, text = x.name })));

        var asdemo = {
            init: function () {
                asdemo.initMainTable();
                $(document).delegate('.usCreateDoc', 'click', function (e) {
                    e.preventDefault();
                    asdemo.createItem();
                });
            },
            initMainTable: function () {
                as.crud.init({
                    cont: $('.usCont'),
                    title: 'Параметры калькуляций',
                    toolbarAdditional: '<a href="#" class="btn btn-primary usCreateDoc">Создать</a>',
                    groupOperationsToolbar: '',
                    ajaxURLFormat: '/Admin/CalcParams_{0}',
                    inlineAjaxURL: "/Admin/CalcParamsInline",
                    pageSize: 150,
                    cookiePrefix: "as-crud-CalcParams-",
                    emptyText: 'Нет элементов',
                    createLinkTitle: 'Создать',
                    filterLinkTitle: 'Найти',
                    filterTitle: 'Фильтрация данных',
                    showChecksCol: false,
                    showNumsCol: true,
                    showToolbar: true,
                    showColSettings: false,
                    showReplaceTool: false,
                    showExcelExport: false,
                    additionalSort: false,
                    cols: [
                       { code: "id", title: "ID", tooltip: "Идентификатор", isVisible: false, isPK: true, datatype: "int", isRequired: false, editHide: true },
                       {
                           code: "name", title: "Название", tooltip: "Название", isVisible: true, isPK: false, datatype: "string", isRequired: true, format: "{0}", isSort: true, callback: null,
                           editable: { type: "text", format: "{0}", callback: function (el, newValue) { } }
                       },
                       {
                           code: "code", title: "Код", tooltip: "code", isVisible: true, isPK: false, datatype: "string", isRequired: true, format: "{0}", isSort: true, callback: null,
                           editable: { type: "text", format: "{0}", callback: function (el, newValue) { } }
                       },
                       {
                           code: "calcName", title: "Calc название", tooltip: "Calc название", isVisible: true, isPK: false, datatype: "select", isRequired: false, format: "{0}", isSort: true, editSources: sourceCalcCalcs, callback: null,
                           editable: { type: "select", format: "{0}", source: sourceCalcCalcsEditable, notSelected: "Не установлено", callback: function (el, newValue) { } },
                       },
                       {
                           code: "dataTypeName", title: "Тип данных", tooltip: "Тип данных", isVisible: true, isPK: false, datatype: "select", isRequired: false, format: "{0}", isSort: false, editSources: sourceDataTypes, callback: null,
                           editable: { type: "select", format: "{0}", source: sourceDataTypesEditable, notSelected: "Не установлено", callback: function (el, newValue) { } },
                       },
                    ],
                    operations: {
                        create: false,
                        remove: true,
                        edit: false,
                        other: []
                    },
                    getFilterMakeup: function (filter) {
                        var s = [];

                        s.push("<div class='crdFilterItem'><span class='gCap'>Название</span><input type='text' class='usName' value='" + (filter.name || '') + "' /></div>");

                        $('.usCalcCalcsTemplate option').removeAttr('selected');
                        $('.usCalcCalcsTemplate option[value=' + filter.calcID + ']').attr('selected', 'selected');
                        s.push("<div class='crdFilterItem'><span class='gCap'>Calc название</span><select class='usCalcs'>" + $('.usCalcCalcsTemplate').html() + "</select></div>");

                        $('.usCalcDataTypesTemplate option').removeAttr('selected');
                        $('.usCalcDataTypesTemplate option[value=' + filter.datatypeID + ']').attr('selected', 'selected');
                        s.push("<div class='crdFilterItem'><span class='gCap'>Тип данных</span><select class='usDataTypes'>" + $('.usCalcDataTypesTemplate').html() + "</select></div>");

                        return s.join("");
                    },
                    filter: function () {
                        var filter = {
                            name: $('.usCalcName').val() || "",
                            calcID: $('.usCalcs option:selected').val(),
                            datatypeID: $('.usDataTypes option:selected').val(),
                        };
                        return filter;
                    }
                });
            },
            createItem: function (){
                var s = [];
                s.push("<span>Название параметра</span><input type='text' class='form-control usNewName' /><br />");
                s.push("<span>Код параметра</span><input type='text' class='form-control usNewCode' /><br />");

                $('.usCalcCalcsTemplate option').removeAttr('selected');
                $('.usCalcCalcsTemplate option:first').attr('selected', 'selected');
                s.push("<span>Calc параметр</span><select class='form-control usNewCalcID' >"+ $('.usCalcCalcsTemplate').html() + "</select><br />");

                $('.usCalcDataTypesTemplate option').removeAttr('selected');
                $('.usCalcDataTypesTemplate option:first').attr('selected', 'selected');
                s.push("<span>Тип данных</span><select class='form-control usNewDataTypeID' >"+ $('.usCalcDataTypesTemplate').html() + "</select><br />");

                setTimeout(function () { $('.usNewName').focus(); }, 200);
                as.sys.showDialog("Создание", s.join(""), "Сохранить", function () {
                    var name = $('.usNewName').val();
                    var code = $('.usNewCode').val();
                    var calcID = $('.usNewCalcID option:selected').val();
                    var datatypeID = $('.usNewDataTypeID option:selected').val();
                    if (!name) {
                        as.sys.bootstrapAlert("Введите название", { type: 'warning' });
                        $('.usNewName').focus();
                        return;
                    }
                    if (!code) {
                        as.sys.bootstrapAlert("Введите код", { type: 'warning' });
                        $('.usNewCode').focus();
                        return;
                    }
                    if (!calcID || calcID == 0) {
                        as.sys.bootstrapAlert("Выберите пожалуста параметр из списка", { type: 'warning' });
                        $('.usNewCalcID').focus();
                        return;
                    }
                    if (!datatypeID || datatypeID == 0) {
                        as.sys.bootstrapAlert("Выберите пожалуста тип данных из списка", { type: 'warning' });
                        $('.usNewDataTypeID').focus();
                        return;
                    }
                    var params = {
                        name: name,
                        code: code,
                        calcID: calcID,
                        datatypeID: datatypeID
                    };
                    as.sys.ajaxSend("/Admin/CreateCalcParam", params, function (data) {
                        if (typeof (data) != "object") data = eval('(' + data + ')');
                        if (data.result) {
                            as.sys.bootstrapAlert("Элемент сохранен", { type: 'success' });
                            as.sys.closeDialog();
                            as.crud.getItems();
                            setTimeout(function () {
                                as.crud.gotoItem(data.textID);
                            }, 1000);
                        } else {
                            as.sys.bootstrapAlert(data.msg || "Возникли ошибки при выполнении операции!", { type: 'danger' });
                        }
                    });
                })
            }
        }
        $(function () {
            asdemo.init();
        });

    </script>
}

