@using arkAS.Models;
@{
    Layout = arkAS.BLL.Core.CoreManager.GetCabinetLayout();
    ViewBag.Title = "Пользователи";
    var js = new System.Web.Script.Serialization.JavaScriptSerializer();
}
<style type="text/css">
    .crdTo {
        background: url('/Content/images/icon1.png') no-repeat 0 0;
        display: inline-block;
        width: 16px;
        height: 16px;
    }
    .changePass {
        display: inline-block;
        width: 16px;
        height: 16px;
    }

</style>

<div class='usRolesTemplate hide'>
    <div class="row">
        @foreach (var item in Roles.GetAllRoles())
        {
            <div class="col-lg-2">
                    <input type="checkbox" value='@item' id='svOurSup@(item)' />
                    <label for='svOurSup@(item)'>@item</label>@Html.Raw("&nbsp; &nbsp; &nbsp; &nbsp;")
            </div>
        }
    </div>
</div>

<div class='usCont'>
</div>

@section js{
<script type="text/javascript">
var us = {
    init: function () {
        us.initMainTable();
        $(document).delegate('.usCreateUser', 'click', function (e) {
            e.preventDefault();
            us.createUser();
        });
        $(document).delegate('.usShowActions', 'click', function (e) {
            e.preventDefault();

            var dtbeg = $('.usDtBeg').val();
            if (!dtbeg) {
                as.sys.bootstrapAlert("Укажите, пожалуйста, начальную дату", { type: 'warning' });
                $('.usDtBeg').focus();
                return;
            }
            var dtend = $('.usDtEnd').val();
            if (!dtend) {
                as.sys.bootstrapAlert("Укажите, пожалуйста, конечную дату", { type: 'warning' });
                $('.usDtEnd').focus();
                return;
            }
            var text = $('.usText').val();
            $('.usDivRes').html("");

            var params = {
                username: $('.usDivRes').attr('data-code'),
                dbeg: dtbeg,
                dend: dtend,
                text:text
            };

            as.sys.ajaxSend("/Admin/Users_getUserActionsDt", params, function (data) {

                if (typeof (data) != "object") data = eval('(' + data + ')');

                if (data.total > 0) {
                    var s = [];
                    s.push("<table class='table table-hover table-condensed table-stripped table-bordered'><tr><td>Дата</td><td>URL</td><td>param</td></tr>");
                    $.each(data.items, function (i, item) {
                        var t = "<tr><td>" + item.created + "</td><td>" + item.url + "</td><td>" + item.param + "</td></tr>";
                        s.push(t);
                    });
                    s.push("</table>");
                    $('.usDivRes').html(s.join(""));
                } else {
                    $('.usDivRes').html("<div class='alert alert-info'>Пользователь за указанный период не производил никаких действий</div>");
                }
            });

        });

        $(document).delegate('.usCont .usUserRoles input[type=checkbox]', 'change', function (e) {
            e.preventDefault();
            var tr= $(this).closest('tr');
            var params = {
                userGuid: tr.attr('data-itemID'),
                role: $(this).val(),
                username: $('td[data-code=name]', tr).text(),
                turnOn: $(this).is(":checked")
            };
            as.sys.ajaxSend("/Admin/ChangeRole", params, function (data) {
                if (typeof (data) != "object") data = eval('(' + data + ')');

                if (data.result) {
                    as.sys.bootstrapAlert("Роль изменена", { type: 'success' });
                } else {
                    as.sys.bootstrapAlert("Возникли ошибки при выполнении операции!", { type: 'danger' });
                }
            });
        });
    },
    initMainTable: function () {
        as.crud.init({
            cont: $('.usCont'),
            title: 'Пользователи',
            toolbarAdditional: '<a href="#" class="btn btn-primary usCreateUser">Создать пользователя</a>',
            groupOperationsToolbar: '',
            ajaxURLFormat: '/Admin/Users_{0}',
            inlineAjaxURL: "/Admin/UsersInline",
            pageSize: 150,
            cookiePrefix: "as-crud-usersTable-",
            emptyText: 'Нет пользователей',
            createLinkTitle: 'Создать',
            filterLinkTitle: 'Найти',
            filterTitle: 'Фильтрация данных',
            showChecksCol: false,
            showNumsCol: true,
            showToolbar: true,
            showColSettings: false,
            showReplaceTool: false,
            showExcelExport: false,
            additionalSort: false,
            cols: [
                { code: "id", title: "ID", tooltip: "Идентификатор", isVisible: false, isPK: true, datatype: "int", isRequired: false },
                { code: "name", title: "Логин", tooltip: "Имя", isVisible: true, isPK: false, datatype: "string", isRequired: false, format: "{0}", isSort: true, callback: null },
                {
                     code: "notifyEmails", title: "E-mail для уведомлений", tooltip: "E-mail", isVisible: false, isPK: false, datatype: "string", isRequired: false, format: "{0}", isSort: true, callback: null,
                     editable: { type: "text", format: "{0}", callback: function (el, newValue) { } }
                },
                { code: "creationDate", title: "Дата создания", tooltip: "Дата создания", isVisible: true, isPK: false, datatype: "string", isRequired: false, format: "{0}", isSort: true, callback: null },
                { code: "lastActivityDate", title: "Дата последней активности", tooltip: "Дата создания", isVisible: true, isPK: false, datatype: "string", isRequired: false, format: "{0}", isSort: true, callback: null },
                { code: "roles", title: "Роли", tooltip: "Роли", isVisible: true, isPK: false, datatype: "string", isRequired: false, format: "{0}", isSort: false, callback: null },
                ],
            operations: {
                create: false,
                remove: true,
                edit: false,
                other: [
                     {
                         linkClass: 'crdTo', iconClass: 'icon icon-wrench', title: 'Действия пользователя', callback: function (e,el) {
                             e.preventDefault();
                             var s = [];
                             s.push("<span>Текст</span>&nbsp;&nbsp;&nbsp;<input type='text' class='usText' value='' /><br /><br />");
                             s.push("<span>Дата с:</span>&nbsp;<input type='text' class='usDtBeg asDatepicker'/>&nbsp;<span>по:</span>&nbsp;<input type='text' class='usDtEnd asDatepicker'/>&nbsp;&nbsp;");
                             s.push("<a href='#' class='btn btn-default usShowActions'>Показать</a><br /><br />");
                             var tr = $(this).closest('tr');
                             var username = $('td[data-code=name]', tr).text();
                             var params = {
                                 username: username
                             };
                             s.push("<div class='usDivRes' data-code='" + username + "' style='max-height:300px;overflow: auto;'>");

                             as.sys.ajaxSend("/Admin/Users_getUserActions", params, function (data) {

                                 if (typeof (data) != "object") data = eval('(' + data + ')');

                                 if (data.total > 0) {
                                     s.push("<table class='table table-hover table-condensed table-stripped table-bordered'><tr><td>Дата</td><td>URL</td><td>param</td></tr>");
                                     $.each(data.items, function (i, item) {
                                         var t = "<tr><td>" + item.created+ "</td><td>" + item.url + "</td><td>" + item.param + "</td></tr>";
                                         s.push(t);
                                     });
                                     s.push("</table></div>");
                                     as.sys.showDialog("Действия пользователя " + username, s.join(""));
                                     $('.usDtBeg').val(data.dbeg);
                                     $('.usDtEnd').val(data.dend);

                                 } else {
                                     s.push("<div class='alert alert-info'>Пользователь за указанный период не производил никаких действий</div>");
                                     s.push("</div>");
                                     as.sys.showDialog("Действия пользователя " + username, s.join(""));
                                 }
                             });

                         }
                     },
                     {
                        linkClass: 'changePass', iconClass: 'fa fa-key fa-fw', title: 'Смена пароля', callback: function (e, el) {
                            e.preventDefault();
                            var s = [];
                            var tr = $(this).closest('tr');
                            var username = $('td[data-code=name]', tr).text();
                            var oldPassword = "";
                            var params = {
                                username: username
                            };

                            as.sys.ajaxSend("/Admin/GetUserPassword", params, function (data) {
                                if (typeof (data) != "object") data = eval('(' + data + ')');
                                oldPassword = data.pass;

                                s.push("<span>Логин (Email): " + username + "</span><br/>");
                                s.push("<span>Текущий пароль:" + oldPassword + "</span> <br /> <br />");
                                s.push("<span>Пароль (не меньше 6 символов, хотя бы 1 спец  символ и цифра)</span><input type='text' class='form-control usNewUserPassword' /><br />");

                                setTimeout(function () { $('.usNewUserLogin').focus(); }, 200);
                                as.sys.showDialog("Смена пароля", s.join(""), "Сменить пароль", function () {
                                    var newPassword = $('.usNewUserPassword').val();

                                    if (!newPassword) {
                                        as.sys.bootstrapAlert("Укажите пожалуйста пароль", { type: 'warning' });
                                        $('.usNewUserPassword').focus();
                                        return;
                                    }

                                    var params = { login: username, oldPassword: oldPassword, newPassword: newPassword };
                                    as.sys.ajaxSend("/Admin/ChangeUserPassword", params, function (data) {
                                        if (typeof (data) != "object") data = eval('(' + data + ')');

                                        if (data.result) {
                                            as.sys.bootstrapAlert("Пароль успешно изменен", { type: 'success' });
                                            as.sys.closeDialog();
                                            as.crud.getItems();
                                            setTimeout(function () {
                                                as.crud.gotoItem(data.guid);
                                            }, 1000);
                                        } else {
                                            as.sys.bootstrapAlert(data.msg || "Возникли ошибки при выполнении операции!", { type: 'danger' });
                                        }
                                    });
                                });
                            });
                        }
                    }
                ]
            },
            getFilterMakeup: function (filter) {
                var s = [];
                s.push("<span class='gCap'>Пользователь</span><input type='text' class='usUsername' value='" + (filter.username || '') + "' /><br /><br />");

                $('.usRolesTemplate input').removeAttr('checked');
                if (filter.roles) {
                    $.each(filter.roles, function (i, item) {
                        $('.usRolesTemplate input[value=' + item + ']').attr('checked', 'checked');
                    })
                }
                s.push("<span class='gCap'>Роли</span><div class='usRoles'>" + $('.usRolesTemplate').html() + "</div><br /><br />");

                return s.join("");
            },
            filter: function () {
                var roles = [];
                $('.usRoles input:checked').each(function () {
                    roles.push($(this).attr('value'));
                });

                var filter = {
                    username: $('.usUsername').val() || "",
                    roles:roles
                };
                return filter;
            },
            getItemsCallback: function () {
                $('.usCont .usUserRoles').each(function () {
                    var roles = ("," + $(this).text() + ",").split(",");
                    $('.usRolesTemplate input').removeAttr("checked");
                    $('.usRolesTemplate input').each(function () {
                        if ($.inArray($(this).val(), roles)>=0) {
                            $(this).attr("checked","checked");
                        }
                    });
                    $(this).html($('.usRolesTemplate').html());
                });
            }
        });
    },
    createUser: function () {
        var s = [];
        s.push("<span>Логин (Email)</span><input type='text' class='form-control usNewUserLogin' /><br />");
        s.push("<span>Пароль (не меньше 6 символов, хотя бы 1 спец  символ и цифра)</span><input type='text' class='form-control usNewUserPassword' /><br />");
        setTimeout(function () { $('.usNewUserLogin').focus(); }, 200);
        as.sys.showDialog("Новый пользователь", s.join(""), "Создать пользователя", function () {
            var login = $('.usNewUserLogin').val();
            var password = $('.usNewUserPassword').val();

            if (!login) {
                as.sys.bootstrapAlert("Укажите пожалуйста логин", { type: 'warning' });
                $('.usNewUserLogin').focus();
                return;
            }
            if (!password) {
                as.sys.bootstrapAlert("Укажите пожалуйста пароль", { type: 'warning' });
                $('.usNewUserPassword').focus();
                return;
            }

            if (!as.tools.isEmail(login)) {
                as.sys.bootstrapAlert("В качестве логина необходимо использовать Email", { type: 'warning' });
                $('.usNewUserLogin').focus();
                return;
            }


            var params = { login: login, password: password };
            as.sys.ajaxSend("/Admin/CreateUser", params, function (data) {
                if (typeof (data) != "object") data = eval('(' + data + ')');

                if (data.result) {
                    as.sys.bootstrapAlert("Пользователь успешно создан", { type: 'success' });
                    as.sys.closeDialog();
                    as.crud.getItems();
                    setTimeout(function () {
                        as.crud.gotoItem(data.guid);
                    }, 1000);
                } else {
                    as.sys.bootstrapAlert(data.msg || "Возникли ошибки при выполнении операции!", { type: 'danger' });
                }
            });
        });



    },

}
$(function () {
    us.init();
});
</script>
}