@{
    ViewBag.Title = "Рассылка почты";
    var js = new System.Web.Script.Serialization.JavaScriptSerializer();
}
<style>
    #emailBody {border:1px solid #c6c6c6; padding:20px 5px 20px; margin-top:20px;}
</style>
<div class='dmCont'>
</div>

<select class='dmRolesTemplate hide'>
    <option value="0">Не выбрано</option>
    @foreach (var item in ViewBag.Roles)
    {
        <option value='@item'>@item</option>
    }
</select>



@Html.Raw(arkAS.BLL.Core.CoreManager.GetMainFormLink())

@section js{
    <script type="text/javascript">
   

        var asdemo = {
            options: { params: ''},
            init: function () {
                asdemo.initMainTable();
               
                $(document).delegate('#emailList', 'change', function () {
                    //alert("sadlasjd");
                    var equalEmail = '';
                    var t = $(this).val();
                    $.each(emailList,function(i, val){
                        if(val.id == t ){equalEmail = val}
                    });
                    var s = [];
                    s.push("<span>"+equalEmail.Subject+"</span><br /><br /><span>"+equalEmail.Body+"</span>");
                    $("#emailBody").empty();
                    $("#emailBody").addClass("hide");
                    var f= [];
                    if(equalEmail.Subject != undefined){
                        $("#emailBody").removeClass("hide");
                        $("#emailBody").append(s.join(""));
                    }
                    
                    
                });

                $(document).delegate('.dmDemoBtn', 'click', function () {
                    var s = [];
                    var t = $(".crdSelect:checked").closest("tr").find("td[data-code='id']").each(function (item) {
                        s.push($(this).html());
                    });

                    var el = [];
                    el.push("<select id='emailList' class='dmEmailsTemplate'>");
                    el.push("<option value='none'>Не выбрано</option>");
                    for(var i =0; i< emailList.length; i++)
                    {
                        el.push(" <option value='"+emailList[i].id+"'>"+emailList[i].Subject+"</option>");
                    }
                    el.push("</select><div id='emailBody' class='hide'></div>");
                    
                    as.sys.showDialog( "Отправка письма", el.join(""),  "Отправить", function () {
                        var emailItem = $("#asModal").find('.dmEmailsTemplate option:selected').val();
                        // alert(emailItem);
                        var p = {};
                        p.ids = s;
                        p.emailID = emailItem;

                        if (emailItem != "none") {

                            as.sys.ajaxSend("/Demo/SendEmail", p, function (data)
                            {
                                console.log(data);
                                as.sys.bootstrapAlert("Успешно отправлено!", { type: 'success' });
                                as.sys.closeDialog($('#asModal'));
                            },
                            false);



                        }
                        else{as.sys.bootstrapAlert("Вы не выбрали письмо!", { type: 'warning' });}

                        //var url = $('.feSelFile').attr('data­url');

                        //var alt = $('.feAlt').val();

                        //if (callback) callback(url, fe.curElementData, { alt: alt, width: selFile.attr('w'), height: selFile.attr('w') });



                    }, true, function () { }, $('#asModal'));
                });
            },
            initMainTable: function () {
                as.crud.init({
                    cont: $('.dmCont'),
                    title: 'Рассылка почты',
                    toolbarAdditional: 'Выберите пользователей для отправки почты.<br />',
                    groupOperationsToolbar: '<br /><a href="#" class="dmDemoBtn btn btn-warning">Отправить</a>&nbsp;&nbsp; ',
                    ajaxURLFormat: '/Demo/UsersTable_{0}',
                    inlineAjaxURL: "",
                    pageSize: 150,
                    cookiePrefix: "as-crud-groupOperationTable-",
                    emptyText: 'Нет элементов',
                    createLinkTitle: 'Создать',
                    filterLinkTitle: 'Найти',
                    filterTitle: 'Фильтрация данных',
                    showChecksCol: true,
                    showNumsCol: true,
                    showToolbar: true,
                    showColSettings: false,
                    showReplaceTool: false,
                    showExcelExport: false,
                    additionalSort: false,
                    cols: [
                        { code: "id", title: "ID", tooltip: "Идентификатор", isVisible: false, isPK: true, datatype: "int", isRequired: false },
                        { code: "name", title: "Имя", tooltip: "Имя пользователя", isVisible: true, isPK: false, datatype: "string", isRequired: false, format: "{0}", isSort: true, callback: null },
                        { code: "email", title: "Email", tooltip: "Электронная почта", isVisible: true, isPK: false, datatype: "string", isRequired: false, format: "{0}", isSort: true, callback: null },
                    ],
                    operations: {
                        create: false,
                        remove: false,
                        edit: false,
                        other: [
                        ]
                    },
                    getFilterMakeup: function (filter) {
                        var s = [];

                        $('.dmRolesTemplate option').removeAttr('selected');
                        $('.dmRolesTemplate option[value=' + filter.Role + ']').attr('selected', 'selected');
                        s.push("<span class='gCap'>Роль</span><select class='dmRoles'>" + $('.dmRolesTemplate').html() + "</select><br /><br />");
                        return s.join("");
                    },
                    filter: function () {

                        var filter = {
                            Role: $('.dmRoles option:selected').val(),

                        };
                        return filter;
                    }
                });
            }
        }
        $(function () {
            asdemo.init();
        });
    </script>
}




