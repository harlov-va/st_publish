@{
    Layout = arkAS.BLL.Core.CoreManager.GetCabinetLayout();
    ViewBag.Title = "Логи";
    var js = new System.Web.Script.Serialization.JavaScriptSerializer();
}

<select class='isChoiceSelectBackup hide'>
    <option value="-1">Не выбрано</option>
    <option value="0">Нет</option>
    <option value="1">Да</option>
</select>

<select class='isChoiceSelectImport hide'>
    <option value="-1">Не выбрано</option>
    <option value="0">Нет</option>
    <option value="1">Да</option>
</select>

<select class='itemTemplate hide'>
    @foreach (var item in (List<arkAS.BLL.imp_items>)ViewBag.Items)
    {
        <option value='@item.id'>@item.name</option>
    }
</select>

<select class='itemTemplateFilter hide'>
    <option value="-1">Не выбрано</option>
    @foreach (var item in (List<arkAS.BLL.imp_items>)ViewBag.Items)
    {
        <option value='@item.id'>@item.name</option>
    }
</select>

<div class='usCont'>
</div>

@section js{
    <script type="text/javascript">
        var itemsSource = @Html.Raw(js.Serialize(((List<arkAS.BLL.imp_items>) ViewBag.Items).Select(x => new {Value = x.id, Text = x.name, Selected = false})));

        var asdemo = {
            init: function() {
                asdemo.initMainTable();
                $(document).delegate('.createItemLog', 'click', function(e) {
                    e.preventDefault();
                    asdemo.createItemLog();
                });
            },
            initMainTable: function() {
                as.crud.init({
                    cont: $('.usCont'),
                    title: 'Логи',
                    toolbarAdditional: '<a href="#" class="btn btn-primary createItemLog">Добавить </a>&nbsp;&nbsp;',
                    groupOperationsToolbar: '',
                    ajaxURLFormat: '/Imp/ItemLogs_{0}',
                    inlineAjaxURL: "",
                    pageSize: 25,
                    cookiePrefix: "as-crud-ItemLogsDict-",
                    emptyText: 'Нет элементов',
                    createLinkTitle: 'Создать',
                    filterLinkTitle: 'Найти',
                    filterTitle: 'Фильтрация данных',
                    showChecksCol: false,
                    showNumsCol: true,
                    showToolbar: true,
                    showColSettings: false,
                    showReplaceTool: false,
                    showExcelExport: false,
                    additionalSort: false,
                    cols: [
                        { code: "id", title: "id", tooltip: "Идентификатор", isVisible: false, isPK: true, datatype: "int", isRequired: false, editHide: true },
                        { code: "itemName", title: "Действие", tooltip: "Действие", isVisible: true, isPK: false, datatype: "select", isRequired: false, format: "{0}", isSort: true, editSources: itemsSource, callback: null },
                        { code: "itemID", title: "Код действия", tooltip: "Код действия", isVisible: false, isPK: false, datatype: "string", isRequired: false, format: "{0}", isSort: true, editHide: true, callback: null },
                        {
                            code: "created",
                            title: "Дата создания",
                            tooltip: "Дата создания",
                            isVisible: true,
                            isPK: false,
                            datatype: "string",
                            isRequired: true,
                            isSort: true,
                            editHide: false,
                            filter: { type: "daterange" }
                        },
                        { 
                            code: "createdBy", title: "Автор", tooltip: "Автор", isVisible: true, isPK: false, datatype: "string", isRequired: false, format: "{0}", isSort: true, callback: null
                        },
                        { code: "errors", title: "Ошибки", tooltip: "Ошибки", isVisible: true, isPK: false, datatype: "string", isRequired: false, isSort: false, editHide: false },
                        { code: "info", title: "Информация", tooltip: "Информация", isVisible: true, isPK: false, datatype: "string", isRequired: false, isSort: false, editHide: false },
                        { code: "durationSec", title: "Длительность, сек", tooltip: "Длительность, сек", isVisible: true, isPK: false, datatype: "int", isRequired: false, isSort: true, editHide: false },
                        
                        {
                            code: "withBackup",
                            title: "С бэкап",
                            tooltip: "С бэкап",
                            isVisible: true,
                            isPK: false,
                            datatype: "string",
                            editHide: true,
                            isRequired: false,
                            format: "{0}",
                            isSort: true,
                            editable: { type: "select", format: "{0}", source: [{ value: "Да", text: "Да" }, { value: "Нет", text: "Нет" }], callback: function(el, newValue) {} }
                        },
                        {
                            code: "isImport",
                            title: "Импортировано",
                            tooltip: "Импортировано",
                            isVisible: true,
                            isPK: false,
                            datatype: "string",
                            editHide: true,
                            isRequired: false,
                            format: "{0}",
                            isSort: true,
                            editable: { type: "select", format: "{0}", source: [{ value: "Да", text: "Да" }, { value: "Нет", text: "Нет" }], callback: function(el, newValue) {} }
                        }
                    ],
                    operations: {
                        create: false,
                        remove: true,
                        edit: false,
                        other: [
                            { linkClass: 'crdTo2', iconClass: 'glyphicon glyphicon-pencil', title: 'Редактировать', callback: asdemo.editItemLog }
                        ]
                    },
                    getFilterMakeup: function(filter) {
                        var s = [];
                        $('.isChoiceSelectImport option').removeAttr('selected');
                        $('.isChoiceSelectImport option[value=' + filter.isImport + ']').attr('selected', 'selected');
                        s.push("<div class='crdFilterItem'><span class='gCap'>Импортирован</span><select class='fIsImport'>" + $('.isChoiceSelectImport').html() + "</select></div>");

                        $('.isChoiceSelectBackup option').removeAttr('selected');
                        $('.isChoiceSelectBackup option[value=' + filter.withBackup + ']').attr('selected', 'selected');
                        s.push("<div class='crdFilterItem'><span class='gCap'>С бэкап</span><select class='fWithBackup'>" + $('.isChoiceSelectBackup').html() + "</select></div>");


                        $('.itemTemplateFilter option').removeAttr('selected');
                        $('.itemTemplateFilter option[value=' + filter.itemId + ']').attr('selected', 'selected');
                        s.push("<div class='crdFilterItem'><span class='gCap'>Название действия</span><select class='fItemId'>" + $('.itemTemplateFilter').html() + "</select></div>");


                        return s.join("");
                    },
                    filter: function() {

                        var filter = {
                            isImport: $('.fIsImport').val() || "",
                            withBackup: $('.fWithBackup').val() || "",
                            itemId: $('.fItemId').val() || ""

                        };
                        return filter;
                    },

                });
            },
            createItemLog: function() {
                var s = [];
                as.sys.ajaxSend("/Imp/GetItemLogDefault", params, function(data) {
                    if (typeof (data) != "object") data = eval('(' + data + ')');
                    if (data.created) {
                        $('.itemTemplate option').removeAttr('selected');
                        $('.itemTemplate option:first').attr('selected', 'selected');
                        s.push("<span>Действие</span><select class='form-control crItemEdit'>" + $('.itemTemplate').html() + "</select><br />");

                        var date = asdemo.formatDate(data.created);
                        s.push("<span>Дата</span><input  type='date' disabled data-date-format='DD MM YYYY' value='" + date + "' class='form-control crCreated'/><br />");
                        s.push("<span>Автор</span><input type='text' disabled value='" + data.createdBy + "' class='form-control crCreatedBy' /><br />");
                        s.push("<span>Ошибки</span><br /><textarea class='crdCommentText crErrors' ></textarea><br />");
                        s.push("<span>Информация</span><br /><textarea class='crdCommentText crInfo' ></textarea><br />");
                        s.push("<span>Длительность, сек</span><br /><input type='number' class='form-control crDur' /><br />");

                        $('.isChoiceSelectBackup option').removeAttr('selected');
                        $(".isChoiceSelectBackup option:first").attr("selected", "selected");
                        s.push("<span>С бэкап</span><select class='form-control crWithBackup'>" + $('.isChoiceSelectBackup').html() + "</select><br />");


                        $('.isChoiceSelectImport option').removeAttr('selected');
                        $(".isChoiceSelectImport option:first").attr("selected", "selected");
                        s.push("<span>Импортировано</span><select class='form-control crIsImport'>" + $('.isChoiceSelectImport').html() + "</select><br />");

                        setTimeout(function() { $('.usLogin').focus(); }, 200);

                        as.sys.showDialog("Создание", s.join(""), "Сохранить", function() {
                            var itemId = $('.crItemEdit option:selected').val();
                            var created = $('.crCreated').val();
                            var createdBy = $('.crCreatedBy').val();
                            var errors = $('.crErrors').val();
                            var info = $('.crInfo').val();
                            var dur = $('.crDur').val();
                            var withBackup = ($('.crWithBackup').val() == 1) ? true : false;
                            var isImport = ($('.crIsImport').val() == 1) ? true : false;

                            if (itemId == -1) {
                                as.sys.bootstrapAlert("Укажите, пожалуйста, действие", { type: 'warning' });
                                $('.crItemEdit').focus();
                                return;
                            }
                            if (createdBy == "") {
                                as.sys.bootstrapAlert("Укажите, пожалуйста, автора", { type: 'warning' });
                                $('.crCreatedBy').focus();
                                return;
                            }
                            if (withBackup == -1) {
                                as.sys.bootstrapAlert("Укажите, пожалуйста, тип с бэкап", { type: 'warning' });
                                $('.crWithBackup').focus();
                                return;
                            }
                            if (isImport == -1) {
                                as.sys.bootstrapAlert("Укажите, пожалуйста, тип импортирования", { type: 'warning' });
                                $('.crIsImport').focus();
                                return;
                            }

                            var params = {
                                itemID: itemId,
                                created: created,
                                createdBy: createdBy,
                                errors: errors,
                                info: info,
                                dur:dur,
                                withBackup: withBackup,
                                isImport: isImport
                            };
                            as.sys.ajaxSend("/Imp/ItemLogsCreate", params, function(data) {
                                if (typeof (data) != "object") data = eval('(' + data + ')');
                                if (data.result) {
                                    as.sys.bootstrapAlert("Лог успешно добавлен", { type: 'success' });
                                    as.sys.closeDialog();
                                    as.crud.getItems();
                                    setTimeout(function() {
                                        as.crud.gotoItem(data.categoryID);
                                    }, 1000);
                                } else {
                                    as.sys.bootstrapAlert(data.msg || "Возникли ошибки при выполнении операции!", { type: 'danger' });
                                }
                            });
                        });




                    } else {
                        as.sys.bootstrapAlert(data.msg || "Возникли ошибки при выполнении операции!", { type: 'danger' });
                    }
                });
            },
            editItemLog: function() {
                var s = [];
                var params = { id: $(this).closest('tr').attr('data-itemid') };
                var p = params;
                as.sys.ajaxSend("/Imp/GetItemLog", params, function(data) {
                    if (typeof (data) != "object") data = eval('(' + data + ')');
                    if (data.id) {
                        $('.itemTemplate option').removeAttr('selected');
                        $(".itemTemplate option[value='" + data.itemID + "']").attr("selected", "selected");
                        s.push("<span>Действие</span><select class='form-control usItemEdit'>" + $('.itemTemplate').html() + "</select><br />");

                        var date = asdemo.formatDate(data.created);

                        s.push("<span>Дата</span><input  type='date' disabled data-date-format='DD MM YYYY' value='" + date + "' class='form-control usCreated'/><br />");
                        s.push("<span>Автор</span><input type='text' disabled class='form-control usCreatedBy' value='" + data.createdBy + "' /><br />");
                        s.push("<span>Ошибки</span><br /><textarea class='crdCommentText usErrors' >" + data.errors + "</textarea><br />");
                        s.push("<span>Информация</span><br /><textarea class='crdCommentText usInfo' >" + data.info + "</textarea><br />");
                        s.push("<span>Длительность, сек</span><input type='number'  class='form-control usDur' value='"+data.durationSec+"' /><br />");


                        var val = (data.withBackup == true) ? 1 : 0;
                        $('.isChoiceSelectBackup option').removeAttr('selected');
                        $(".isChoiceSelectBackup option[value='" + val + "']").attr("selected", "selected");
                        s.push("<span>С бэкап</span><select class='form-control usWithBackup'>" + $('.isChoiceSelectBackup').html() + "</select><br />");

                        var val1 = (data.isImport == true) ? 1 : 0;
                        $('.isChoiceSelectImport option').removeAttr('selected');
                        $(".isChoiceSelectImport option[value='" + val1 + "']").attr("selected", "selected");
                        s.push("<span>Ипортировано</span><select class='form-control usIsImport'>" + $('.isChoiceSelectImport').html() + "</select><br />");

                        setTimeout(function() { $('.usCreatedBy').focus(); }, 200);
                        as.sys.showDialog("Редактирование", s.join(""), "Сохранить", function() {
                            var itemId = $('.usItemEdit option:selected').val();
                            var created = $('.usCreated').val();
                            var createdBy = $('.usCreatedBy').val();
                            var errors = $('.usErrors').val();
                            var info = $('.usInfo').val();
                            var dur = $('.usDur').val();
                            var withBackup = ($('.usWithBackup').val() == 1) ? true : false;
                            var isImport = ($('.usIsImport').val() == 1) ? true : false;

                            var id = parseInt(params.id);
                            var p = id;

                            if (itemId == -1) {
                                as.sys.bootstrapAlert("Укажите, пожалуйста, действие", { type: 'warning' });
                                $('.usItemEdit').focus();
                                return;
                            }
                            if (createdBy == "") {
                                as.sys.bootstrapAlert("Укажите, пожалуйста, автора", { type: 'warning' });
                                $('.usCreatedBy').focus();
                                return;
                            }
                            if (withBackup == -1) {
                                as.sys.bootstrapAlert("Укажите, пожалуйста, тип с бэкап", { type: 'warning' });
                                $('.usWithBackup').focus();
                                return;
                            }
                            if (isImport == -1) {
                                as.sys.bootstrapAlert("Укажите, пожалуйста, тип импортирования", { type: 'warning' });
                                $('.usIsImport').focus();
                                return;
                            }

                            var paramsEdit = {
                                id: id,
                                itemID: itemId,
                                created: created,
                                createdBy: createdBy,
                                errors: errors,
                                info: info,
                                dur:dur,
                                withBackup: withBackup,
                                isImport: isImport
                            };
                            as.sys.ajaxSend("/Imp/ItemLogsEdit", paramsEdit, function(data) {
                                if (typeof (data) != "object") data = eval('(' + data + ')');
                                if (data.result) {
                                    as.sys.bootstrapAlert("Лог успешно отредактирован", { type: 'success' });
                                    as.sys.closeDialog();
                                    as.crud.getItems();
                                    setTimeout(function() {
                                        as.crud.gotoItem(data.itemID);
                                    }, 1000);
                                } else {
                                    as.sys.bootstrapAlert(data.msg || "Возникли ошибки при выполнении операции!", { type: 'danger' });
                                }
                            });
                        });
                    } else {
                        as.sys.bootstrapAlert(data.msg || "Возникли ошибки при выполнении операции!", { type: 'danger' });
                    }
                });
            },
            formatDate: function(dateString) {
                var date_mas = dateString.split('.');
                return [date_mas[2], date_mas[1], date_mas[0]].join('-');
            }
        }
        $(function() {
            asdemo.init();
        });
    </script>

}




