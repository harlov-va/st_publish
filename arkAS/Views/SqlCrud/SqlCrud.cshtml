@using arkAS.Models;
@{
    Layout = arkAS.BLL.Core.CoreManager.GetCabinetLayout();
    ViewBag.Title = "SqlCrud";
    var js = new System.Web.Script.Serialization.JavaScriptSerializer();
}

<div class='usRolesTemplate hide'>

    @foreach (var item in Roles.GetAllRoles())
    {
        <input type="checkbox" value='@item' id='svOurSup@(item)' /><label for='svOurSup@(item)'>@item</label>@Html.Raw("&nbsp; &nbsp; &nbsp; &nbsp;")
    }
</div>

<div class='usCont'>
</div>
@section js{
    <script type="text/javascript">
        var us = {
            init: function () {
                us.initMainTable();
                $(document).delegate('.usCreateSql', 'click', function (e) {
                    e.preventDefault();
                    us.createSql();
                });

                $(document).delegate('.usCont .usUserRoles input[type=checkbox]', 'change', function (e) {
                    e.preventDefault();
                    var tr = $(this).closest('tr');
                    var params = {
                        sqlID: tr.attr('data-itemID'),
                        role: $(this).val(),
                        turnOn: $(this).is(":checked")
                    };
                    as.sys.ajaxSend("/SqlCrud/ChangeRoleForSql", params, function (data) {
                        if (typeof (data) != "object") data = eval('(' + data + ')');

                        if (data.result) {
                            as.sys.bootstrapAlert("Роль изменена", { type: 'success' });
                        } else {
                            as.sys.bootstrapAlert("Возникли ошибки при выполнении операции!", { type: 'danger' });
                        }
                    });
                });
            },
            initMainTable: function () {
                as.crud.init({
                    cont: $('.usCont'),
                    title: 'SqlCrud',
                    toolbarAdditional: '<a href="#" class="btn btn-primary usCreateSql">Создать Sql</a>',
                    groupOperationsToolbar: '',
                    ajaxURLFormat: '/SqlCrud/SqlCrud_{0}',
                    inlineAjaxURL: "/SqlCrud/SqlCrudInline",
                    pageSize: 5,
                    cookiePrefix: "as-crud-sqlCrudTable-",
                    emptyText: 'Нет sqlCrud',
                    createLinkTitle: '',
                    filterLinkTitle: 'Найти',
                    filterTitle: 'Фильтрация данных',
                    showChecksCol: false,
                    showNumsCol: true,
                    showToolbar: true,
                    showColSettings: false,
                    showReplaceTool: false,
                    showExcelExport: false,
                    additionalSort: false,
                    cols: [
                        { code: "id", title: "ID", tooltip: "Идентификатор", isVisible: false, isPK: true, datatype: "int", isRequired: false },
                        { code: "code", title: "Код", tooltip: "Код", isVisible: true, isPK: false, datatype: "string", isRequired: false, format: "{0}", isSort: true, callback: null,editable: { type: "text", format: "{0}", callback: function (el, newValue) { } }},
                        {
                            code: "sql", title: "Sql", tooltip: "Sql", isVisible: true, isPK: false, datatype: "string", isRequired: false, format: "{0}", isSort: true, callback: null,editable: { type: "text", format: "{0}", callback: function (el, newValue) { } }
                        },
                        { code: "roles", title: "Роли", tooltip: "Роли", isVisible: true, isPK: false, datatype: "string", isRequired: false, format: "{0}", isSort: false, callback: null },
                        { code: "users", title: "Пользователи", tooltip: "Пользователи", isVisible: true, isPK: false, datatype: "string", isRequired: false, format: "{0}", isSort: false, callback: null }
                    ],
                    operations: {
                        create: false,
                        remove: true,
                        edit: false,
                        other: [
                        ]
                    },
                    getFilterMakeup: function (filter) {
                        var s = [];
                        s.push("<span class='gCap'>Код</span><input type='text' class='usCode' value='" + (filter.text || '') + "' /><br /><br />");

                        $('.usRolesTemplate input').removeAttr('checked');
                        if (filter.roles) {
                            $.each(filter.roles, function(i, item) {
                                $('.usRolesTemplate input[value=' + item + ']').attr('checked', 'checked');
                            });
                        }
                        s.push("<span class='gCap'>Роли</span><div class='usRoles'>" + $('.usRolesTemplate').html() + "</div><br /><br />");

                        return s.join("");
                    },
                    filter: function () {
                        var roles = [];
                        $('.usRoles input:checked').each(function () {
                            roles.push($(this).attr('value'));
                        });

                        var filter = {
                            code: $('.usCode').val() || "",
                            roles: roles
                        };
                        return filter;
                    },
                    getItemsCallback: function () {
                        $('.usCont .usUserRoles').each(function () {
                            var roles = ("," + $(this).text() + ",").split(",");
                            $('.usRolesTemplate input').removeAttr("checked");
                            $('.usRolesTemplate input').each(function () {
                                if ($.inArray($(this).val(), roles) >= 0) {
                                    $(this).attr("checked", "checked");
                                }
                            });
                            $(this).html($('.usRolesTemplate').html());
                        });
                    }
                });
            },
            createSql: function () {
                var s = [];
                s.push("<span>Код (латиница)</span><input type='text' class='form-control usNewSqlCode' /><br />");
                s.push("<span>Sql</span><input type='text' class='form-control usNewSql' /><br />");
                setTimeout(function () { $('.usNewSqlCode').focus(); }, 200);
                as.sys.showDialog("Новый Sql", s.join(""), "Создать Sql", function () {
                    
                    var code = $('.usNewSqlCode').val();
                    var sql = $('.usNewSql').val();
                    if (!sql) {
                        as.sys.bootstrapAlert("Укажите пожалуйста Sql", { type: 'warning' });
                        $('.usNewSql').focus();
                        return;
                    }
                    if (!code) {
                        as.sys.bootstrapAlert("Укажите пожалуйста код", { type: 'warning' });
                        $('.usNewSqlCode').focus();
                        return;
                    }

                    var params = { code: code,sql:sql };
                    as.sys.ajaxSend("/SqlCrud/CreateSql", params, function (data) {
                        if (typeof (data) != "object") data = eval('(' + data + ')');

                        if (data.result) {
                            as.sys.bootstrapAlert("Sql успешно создан", { type: 'success' });
                            as.sys.closeDialog();
                            as.crud.getItems();
                            setTimeout(function () {
                                as.crud.gotoItem(data.Id);
                            }, 1000);
                        } else {
                            as.sys.bootstrapAlert(data.msg || "Возникли ошибки при выполнении операции!", { type: 'danger' });
                        }
                    });
                });
            },

        }
        $(function () {
            us.init();
        });
    </script>
}