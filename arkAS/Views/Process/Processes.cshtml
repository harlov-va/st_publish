@{
    Layout = arkAS.BLL.Core.CoreManager.GetCabinetLayout();
    ViewBag.Title = "Процессы";
    var js = new System.Web.Script.Serialization.JavaScriptSerializer();
}
@section css{
    <style type="text/css">
        .crdFilterItem input {
            height: inherit;
            width: inherit;
        }
    </style>
}

<div class='procCont'>
</div>
@section js{
    <script type="text/javascript">

        var proc = {
            init: function () {
                proc.initMainTable();
                $(document).delegate('.procCreateProcess', 'click', function (e) {
                    e.preventDefault();
                    proc.createProcess();
                });
            },
            initMainTable: function () {
                as.crud.init({
                    cont: $('.procCont'),
                    title: 'Процессы',
                    toolbarAdditional: '<a href="#" class="btn btn-primary procCreateProcess">Добавить процесс</a>&nbsp;&nbsp;',
                    groupOperationsToolbar: '',
                    ajaxURLFormat: '/Process/Processes_{0}',
                    inlineAjaxURL: "/Process/ProcessesInline",
                    pageSize: 150,
                    cookiePrefix: "as-crud-processTable-",
                    emptyText: 'Процессы не найдены',
                    createLinkTitle: 'Создать',
                    //filterLinkTitle: 'Найти',
                    //filterTitle: 'Фильтрация данных',
                    showChecksCol: false,
                    showNumsCol: true,
                    showToolbar: true,
                    showColSettings: true,
                    showReplaceTool: false,
                    showExcelExport: false,
                    additionalSort: true,
                    cols: [
                        { code: "id", title: "ID", tooltip: "Идентификатор", isVisible: false, isPK: true, datatype: "int", isRequired: false },
                        {
                            code: "name", title: "Наименование", tooltip: "Наименование", isVisible: true, isPK: false, datatype: "string", isRequired: false, format: "{0}", isSort: true, callback: null,
                            filter: { type: "string"},
                            editable: { type: "text", format: "{0}", callback: function (el, newValue) { }}
                        },
                        {
                            code: "desc", title: "Описание", tooltip: "Описание", isVisible: true, isPK: false, datatype: "string", isRequired: false, format: "{0}", isSort: false, callback: null,
                            filter: { type: "string"},
                            editable: { type: "text", format: "{0}", callback: function (el, newValue) { }}
                        },
                        {
                            code: "code", title: "Алиас", tooltip: "Алиас", isVisible: true, isPK: false, datatype: "string", isRequired: false, format: "{0}", isSort: true, callback: null,
                            filter: { type: "string"},
                            editable: { type: "text", format: "{0}", callback: function (el, newValue) { }}
                        }
                    ],
                    operations: {
                        create: false,
                        remove: true,
                        edit: false,
                        comments: false,
                        other: [
                        ]
                    }
                });
            },
            createProcess: function () {
                var s = [];
                s.push("<span>Наименование</span><input type='text' class='form-control prNewName' /><br />");

                s.push("<span>Описание</span><br /><textarea class='crdCommentText prNewDesc'></textarea><br />");

                s.push("<span>Алиас</span><input type='text' class='form-control prNewCode' /><br />");

                setTimeout(function () { $('.usNewFio').focus(); }, 200);
                as.sys.showDialog("Новый процесс", s.join(""), "Создать задачу", function () {
                    var Name = $('.prNewName').val();
                    var Desc = $('.prNewDesc').val();
                    var Code = $('.prNewCode').val();


                    if (!Name) {
                        as.sys.bootstrapAlert("Укажите, пожалуйста, наименование процесса", { type: 'warning' });
                        $('.prNewName').focus();
                        return;
                    }
                    if (!Code) {
                        as.sys.bootstrapAlert("Укажите, пожалуйста, алиас", { type: 'warning' });
                        $('.prNewCode').focus();
                        return;
                    }

                    var params = { name: Name, desc: Desc, code: Code};
                    as.sys.ajaxSend("/Process/CreateProcesses", params, function (data) {
                        if (typeof (data) != "object") data = eval('(' + data + ')');
                        if (data.result) {
                            as.sys.bootstrapAlert("Процесс успешно добавлен", { type: 'success' });
                            as.sys.closeDialog();
                            as.crud.getItems();
                            setTimeout(function () {
                                as.crud.gotoItem(data.itemID);
                            }, 1000);
                        } else {
                            as.sys.bootstrapAlert(data.msg || "Возникли ошибки при выполнении операции!", { type: 'danger' });
                        }
                    });
                });
            }
        }
        $(function () {
            proc.init();
        });
    </script>
}

